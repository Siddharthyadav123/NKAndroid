buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "com.netkoin.app"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0.16"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("netkoin_certificate.keystore")
            storePassword "netkoin@1234"
            keyAlias "netkoin"
            keyPassword "netkoin@1234"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        production {
            applicationId "com.netkoin.app"
            buildConfigField 'String', 'BASE_URL', '"https://biz.netkoin.com"'
        }

        staging {
            applicationId "com.netkoin.app"
            buildConfigField 'String', 'BASE_URL', '"https://test2.netkoin.com"'
        }

        development {
            applicationId "com.netkoin.app"
            buildConfigField 'String', 'BASE_URL', '"https://biz.netkoin.com"'
        }
    }

    // Removing "Release" build type from staging and development and "Debug" from production
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('development')) {
            variant.setIgnore(true);
        }
       // if (variant.buildType.name.equals('release')
         //       && variant.getFlavors().get(0).name.equals('staging')) {
         //   variant.setIgnore(true);
        //}
        if (variant.buildType.name.equals('debug')
                && variant.getFlavors().get(0).name.equals('production')) {
            variant.setIgnore(true);
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'me.relex:circleindicator:1.2.1@aar'
    compile 'info.hoang8f:android-segmented:1.0.6'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.android.gms:play-services-vision:10.0.1'
    compile 'com.facebook.android:facebook-android-sdk:4.6.0'
    compile 'com.google.android.gms:play-services-auth:10.0.1'
    compile 'com.google.firebase:firebase-messaging:10.0.1'
    testCompile 'junit:junit:4.12'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }

}

apply plugin: 'com.google.gms.google-services'